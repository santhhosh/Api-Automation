{"name": "test_get_request_listuser", "status": "failed", "statusDetails": {"message": "AssertionError: Expected total_pages to be 2\nassert ([2] is not False and 2 == 5)", "trace": "self = <test_cases.test_GetRequest.TestGetRequest object at 0x000002161CB911F0>\n\n    def test_get_request_listuser(self):\n     log = self.get_the_logs()\n     log.info(\"Starting test_get_request_listuser\")\n    \n     # Send GET request\n     response = requests.get(Get_URL)\n     log.info(f\"GET response: {response}\")\n    \n     # Validate response\n     assert response.status_code == 200, f\"Expected status 200 but got {response.status_code}\"\n    \n     # Print response content and headers\n     print(\"Content of GET method:\", response.content)\n     print(\"Header of GET method:\", response.headers)\n    \n     # Parse response to JSON\n     json_response = response.json()\n     print(\"JSON response:\", json_response)\n    \n     # Fetch value using jsonpath\n     pages = jsonpath.jsonpath(json_response, 'total_pages')\n>    assert pages is not False and pages[0] == 5, \"Expected total_pages to be 2\"\nE    AssertionError: Expected total_pages to be 2\nE    assert ([2] is not False and 2 == 5)\n\ntest_cases\\test_GetRequest.py:31: AssertionError"}, "attachments": [{"name": "log", "source": "38a6cda2-b040-43a4-ac27-43c6cf70a8c1-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "9193b58d-4587-476b-9e81-af5ec9e0cb83-attachment.txt", "type": "text/plain"}], "start": 1747335016719, "stop": 1747335016825, "uuid": "1bd69ede-de75-4442-a607-9ac2d8be56f7", "historyId": "9fa646627167bbb17fba1b50ae7e5352", "testCaseId": "9fa646627167bbb17fba1b50ae7e5352", "fullName": "test_cases.test_GetRequest.TestGetRequest#test_get_request_listuser", "labels": [{"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_GetRequest"}, {"name": "subSuite", "value": "TestGetRequest"}, {"name": "host", "value": "DESKTOP-FR5AEQ7"}, {"name": "thread", "value": "20176-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_GetRequest"}]}